version: "3"
networks:
  default:
    driver: bridge
services:
  #---------------------------------------------------------#
  # CONTAINER: Hello World
  #---------------------------------------------------------#
  hello:
    image: $DOCKER_IMAGE:hello # tag must coincide with service name!
    build:
      context: .. # !!! important !!! Context = root of project.
      dockerfile: whales_setup/Dockerfile
      args:
        # MOUNTS_VOLUME: 0
        WD: $WD
    # volumes:
    #   - ./../HELLO_WORLD:$WD/HELLO_WORLD:rw  ## <- r/w   allows for live developing
    command:
      ["bash", "-c", "echo -e \"\\033[1mwhales:\\033[94mhello\\033[0m docker container ready\""]
  #---------------------------------------------------------#
  # CONTAINER: Production
  #---------------------------------------------------------#
  prod:
    image: $DOCKER_IMAGE:prod # tag must coincide with service name!
    build:
      context: .. # !!! important !!! Context = root of project.
      dockerfile: whales_setup/Dockerfile
      args:
        # MOUNTS_VOLUME: 0
        WD: $WD
    volumes:
      - ./../config.yml:$WD/config.yml:ro
      # - ./../logs:$WD/logs:rw   ## <- (r/)w for logging between all docker levels.
      # - ./../src:$WD/src:rw     ## <- r/w   allows for live developing
      # - ./../test:$WD/test:rw   ##          ""
      # - ./../data:$WD/data:rw   ## <- r/w   data folder, images will be stored here.
      # - ./../dist:$WD/dist:rw   ## <- r/w   distribution folder, VERSION + Programm artefact.
      # - ./../build:$WD/build:rw ## <- (r/)w build folder -> artefact of Pyinstaller.
    command:
      ["bash", "-c", "echo -e \"\\033[1mwhales:\\033[94mprod\\033[0m docker container ready\""]
  #---------------------------------------------------------#
  # CONTAINER: Test
  #---------------------------------------------------------#
  test:
    image: $DOCKER_IMAGE:test # tag must coincide with service name!
    build:
      context: .. # !!! important !!! Context = root of project.
      dockerfile: whales_setup/Dockerfile
      args:
        # MOUNTS_VOLUME: 0
        WD: $WD
    volumes:
      - ./../config-test.yml:$WD/config.yml:ro
      # - ./../logs:$WD/logs:rw   ## <- (r/)w for logging between all docker levels.
      # - ./../src:$WD/src:rw     ## <- r/w   allows for live developing
      # - ./../test:$WD/test:rw   ##          ""
      # - ./../data:$WD/data:rw   ## <- r/w   data folder, images will be stored here.
      # - ./../dist:$WD/dist:rw   ## <- r/w   distribution folder, VERSION + Programm artefact.
      # - ./../build:$WD/build:rw ## <- (r/)w build folder -> artefact of Pyinstaller.
    command:
      ["bash", "-c", "echo -e \"\\033[1mwhales:\\033[94mtest\\033[0m docker container ready\""]
