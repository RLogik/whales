% ----------------------------------------------------------------
% EXPORTS
% ----------------------------------------------------------------

:- module(basic, [bounded/2]).

% ----------------------------------------------------------------
% IMPORTS
% ----------------------------------------------------------------

:- use_module(data/data, [start/1]).
:- use_module(data/data, [end/1]).
:- use_module(data/data, [edge/2]).
:- use_module(data/data, [constraint/2]).

% ----------------------------------------------------------------
% node/1
% ----------------------------------------------------------------

node(X) :- start(X); end(X); edge(_,X); edge(X,_).

% ----------------------------------------------------------------
% count/3
% ----------------------------------------------------------------

count(_,[],0).
count(X,[Y|R],C)   :- X \= Y, count(X,R,C).
count(X,[X|R],C+1) :- count(X,R,C).

% ----------------------------------------------------------------
% unbounded/1, bounded/2
% ----------------------------------------------------------------

unbounded(X) :- \+ constraint(X, _).
bounded(X, P) :- count(X,P,C), constraint(X, N), C =< N.
bounded(X, _) :- unbounded(X).
